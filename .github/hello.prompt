Iâ€™m designing a microservice-based architecture using Kubernetes,
with secure service-to-service communication and support for external user authentication.

The system should use:

- SPIFFE/SPIRE for workload identity (mTLS between services)
- OIDC (OpenID Connect) for authenticating external users
- SpiceDB for fine-grained authorization (ACLs / relationships)
- Authentication and token validation inside each app
- No Envoy sidecars or Istio (ambient mode or otherwise)

I want a PoC that:

- Deploys multiple services to Kubernetes
- Uses SPIRE to assign identities (SVIDs) to services via mTLS
- Uses Authentik as OIDC provider for user login
- Forwards bearer tokens (JWTs) from clients to services
- Validates the token inside each app
- Extracts user identity from the token and queries SpiceDB to authorize actions
 Keeps infrastructure minimal and developer-friendly (easy to run locally or with kind)

